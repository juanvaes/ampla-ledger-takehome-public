from datetime import date
from decimal import Decimal
from unittest import TestCase

from parameterized import parameterized

from advances import AdvanceCalculator


class TestAdvanceCalculator(TestCase):
    @parameterized.expand(
        [
            (
                [
                    (1, "advance", 1000, "2021-01-01"),
                    (2, "advance", 500, "2021-01-01"),
                    (3, "advance", 400, "2021-01-03"),
                ],
                "2021-01-03",
                (Decimal(1900), Decimal(1.72), Decimal(0), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 1000, "2021-01-01"),
                    (2, "advance", 500, "2021-01-01"),
                    (3, "advance", 400, "2021-01-03"),
                    (4, "advance", 250, "2021-01-04"),
                    (5, "advance", 130, "2021-01-05"),
                    (6, "advance", 120, "2021-01-05"),
                ],
                "2021-01-05",
                (Decimal(2400), Decimal(3.31), Decimal(0), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 1000, "2021-01-01"),
                    (2, "advance", 500, "2021-01-01"),
                    (3, "advance", 400, "2021-01-03"),
                    (4, "advance", 250, "2021-01-04"),
                    (5, "advance", 130, "2021-01-05"),
                    (6, "advance", 120, "2021-01-05"),
                    (7, "advance", 835, "2021-01-15"),
                ],
                "2021-01-15",
                (Decimal(3235), Decimal(12.00), Decimal(0), Decimal(0)),
            ),
        ]
    )
    def test_get_advance_statistics_when_all_events_are_advances_and_end_date_equals_to_last_event_date(
        self, events, end_date, expected
    ):
        advance_calculator = AdvanceCalculator()
        response = advance_calculator.get_advance_statistics(
            events=events, end_date=end_date
        )
        self.assertAlmostEqual(response[0], expected[0], places=2)
        self.assertAlmostEqual(response[1], expected[1], places=2)
        self.assertAlmostEqual(response[2], expected[2], places=2)
        self.assertAlmostEqual(response[3], expected[3], places=2)

    @parameterized.expand(
        [
            (
                [
                    (1, "payment", 1000, "2021-01-01"),
                    (2, "payment", 500, "2021-01-01"),
                    (3, "payment", 400, "2021-01-03"),
                ],
                "2021-01-03",
                (Decimal(0), Decimal(0), Decimal(0), Decimal(1900)),
            ),
            (
                [
                    (1, "payment", 1000, "2021-01-01"),
                    (2, "payment", 500, "2021-01-01"),
                    (3, "payment", 400, "2021-01-03"),
                    (4, "payment", 250, "2021-01-04"),
                    (5, "payment", 130, "2021-01-05"),
                    (6, "payment", 120, "2021-01-05"),
                    (7, "payment", 835, "2021-01-15"),
                ],
                "2021-01-15",
                (Decimal(), Decimal(0), Decimal(0), Decimal(3235)),
            ),
        ]
    )
    def test_get_advance_statistics_when_all_events_are_payments_and_end_date_equals_to_last_event_date(
        self, events, end_date, expected
    ):
        advance_calculator = AdvanceCalculator()
        response = advance_calculator.get_advance_statistics(
            events=events, end_date=end_date
        )
        self.assertAlmostEqual(response[0], expected[0], places=2)
        self.assertAlmostEqual(response[1], expected[1], places=2)
        self.assertAlmostEqual(response[2], expected[2], places=2)
        self.assertAlmostEqual(response[3], expected[3], places=2)

    @parameterized.expand(
        [
            (
                [
                    (1, "advance", 1000, "2021-01-01"),
                    (2, "advance", 500, "2021-01-01"),
                    (3, "advance", 400, "2021-01-03"),
                ],
                "2021-01-02",
                (Decimal(1500), Decimal(1.05), Decimal(0), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 1000, "2021-01-01"),
                    (2, "advance", 500, "2021-01-01"),
                    (3, "advance", 400, "2021-01-03"),
                    (4, "advance", 250, "2021-01-04"),  # end_date
                    (5, "advance", 130, "2021-01-04"),
                    (6, "advance", 120, "2021-01-05"),
                ],
                "2021-01-04",
                (Decimal(2280), Decimal(2.51), Decimal(0), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 1000, "2021-01-01"),
                    (2, "advance", 500, "2021-01-01"),
                    (3, "advance", 400, "2021-01-03"),
                    (4, "advance", 250, "2021-01-04"),
                    (5, "advance", 130, "2021-01-04"),
                    (6, "advance", 100, "2021-01-04"),  # end_date
                    (7, "advance", 120, "2021-01-05"),
                    (8, "advance", 120, "2021-01-06"),
                ],
                "2021-01-04",
                (Decimal(2380), Decimal(2.55), Decimal(0), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 1000, "2021-01-01"),
                    (2, "advance", 500, "2021-01-01"),
                    (3, "advance", 400, "2021-01-03"),
                    (4, "advance", 250, "2021-01-04"),
                    (5, "advance", 130, "2021-01-05"),  # end_date
                    (6, "advance", 120, "2021-01-05"),
                    (7, "advance", 100, "2021-01-06"),
                ],
                "2021-01-05",
                (Decimal(2400), Decimal(3.31), Decimal(0), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 1000, "2021-01-01"),
                    (2, "advance", 500, "2021-01-01"),
                    (3, "advance", 400, "2021-01-03"),
                    (4, "advance", 250, "2021-01-04"),
                    (5, "advance", 130, "2021-01-05"),
                    (6, "advance", 120, "2021-01-05"),
                    #   ( , '       ',   0, '2021-01-08'), # end_date
                    (7, "advance", 100, "2021-01-10"),
                    (7, "advance", 100, "2021-01-10"),
                ],
                "2021-01-08",
                (Decimal(2400), Decimal(5.83), Decimal(0), Decimal(0)),
            ),
        ]
    )
    def test_get_advance_statistics_when_all_events_are_advances_and_end_date_is_minor_than_last_event_date(
        self, events, end_date, expected
    ):
        advance_calculator = AdvanceCalculator()
        response = advance_calculator.get_advance_statistics(
            events=events, end_date=end_date
        )
        self.assertAlmostEqual(response[0], expected[0], places=2)
        self.assertAlmostEqual(response[1], expected[1], places=2)
        self.assertAlmostEqual(response[2], expected[2], places=2)
        self.assertAlmostEqual(response[3], expected[3], places=2)

    @parameterized.expand(
        [
            (
                [
                    (1, "payment", 1000, "2021-01-01"),
                    (2, "payment", 500, "2021-01-01"),
                    (3, "payment", 400, "2021-01-03"),
                ],
                "2021-01-02",
                (Decimal(0), Decimal(0), Decimal(0), Decimal(1500)),
            ),
            (
                [
                    (1, "payment", 1000, "2021-01-01"),
                    (2, "payment", 500, "2021-01-01"),
                    (3, "payment", 400, "2021-01-03"),
                    (4, "payment", 250, "2021-01-04"),
                    (5, "payment", 130, "2021-01-05"),  # end_date
                    (6, "payment", 120, "2021-01-05"),
                    (7, "payment", 100, "2021-01-06"),
                ],
                "2021-01-05",
                (Decimal(0), Decimal(0), Decimal(0), Decimal(2400)),
            ),
            (
                [
                    (1, "payment", 1000, "2021-01-01"),
                    (2, "payment", 500, "2021-01-01"),
                    (3, "payment", 400, "2021-01-03"),
                    (4, "payment", 250, "2021-01-04"),
                    (5, "payment", 130, "2021-01-05"),
                    (6, "payment", 120, "2021-01-05"),
                    # end_date
                    (7, "payment", 100, "2021-01-10"),
                ],
                "2021-01-08",
                (Decimal(0), Decimal(0), Decimal(0), Decimal(2400)),
            ),
        ]
    )
    def test_get_advance_statistics_when_all_events_are_payments_and_end_date_is_minor_than_last_event_date(
        self, events, end_date, expected
    ):
        advance_calculator = AdvanceCalculator()
        response = advance_calculator.get_advance_statistics(
            events=events, end_date=end_date
        )
        self.assertAlmostEqual(response[0], expected[0], places=2)
        self.assertAlmostEqual(response[1], expected[1], places=2)
        self.assertAlmostEqual(response[2], expected[2], places=2)
        self.assertAlmostEqual(response[3], expected[3], places=2)

    @parameterized.expand(
        [
            (
                [
                    (1, "advance", 1000, "2021-01-01"),
                    (2, "advance", 500, "2021-01-01"),
                    (3, "advance", 400, "2021-01-03"),
                ],
                "2021-01-05",
                (Decimal(1900), Decimal(3.05), Decimal(0), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 1000, "2021-01-01"),
                    (2, "advance", 500, "2021-01-01"),
                    (3, "advance", 400, "2021-01-03"),
                    (4, "advance", 250, "2021-01-04"),
                    (5, "advance", 130, "2021-01-05"),
                    (6, "advance", 120, "2021-01-05"),
                ],
                "2021-01-08",
                (Decimal(2400), Decimal(5.83), Decimal(0), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 1000, "2021-01-01"),
                    (2, "advance", 500, "2021-01-01"),
                    (3, "advance", 400, "2021-01-03"),
                    (4, "advance", 250, "2021-01-04"),
                    (5, "advance", 130, "2021-01-05"),
                    (6, "advance", 120, "2021-01-05"),
                    (7, "advance", 100, "2021-01-06"),
                ],
                "2021-01-10",
                (Decimal(2500), Decimal(7.68), Decimal(0), Decimal(0)),
            ),
        ]
    )
    def test_get_advance_statistics_when_all_events_are_advances_and_end_date_is_greater_than_last_event_date(
        self, events, end_date, expected
    ):
        advance_calculator = AdvanceCalculator()
        response = advance_calculator.get_advance_statistics(
            events=events, end_date=end_date
        )
        self.assertAlmostEqual(response[0], expected[0], places=2)
        self.assertAlmostEqual(response[1], expected[1], places=2)
        self.assertAlmostEqual(response[2], expected[2], places=2)
        self.assertAlmostEqual(response[3], expected[3], places=2)

    @parameterized.expand(
        [
            (
                [
                    (1, "advance", 1000.00, "2021-05-22"),
                    (2, "payment", 500, "2021-05-24"),
                    (3, "payment", 600, "2021-05-25"),
                ],
                "2021-05-25",
                (Decimal(0), Decimal(0), Decimal(0.88), Decimal(99.12)),
            ),
            (
                [
                    (1, "payment", 1000.00, "2021-05-22"),
                    (2, "advance", 500, "2021-05-22"),
                    (3, "advance", 600, "2021-05-25"),
                ],
                "2021-05-25",
                (Decimal(100), Decimal(0.035), Decimal(0), Decimal(0)),
            ),
            (
                [
                    (1, "payment", 1000.00, "2021-05-22"),
                    (2, "advance", 500, "2021-05-22"),
                    (3, "advance", 600, "2021-05-25"),
                    (4, "payment", 600, "2021-05-25"),
                    (5, "advance", 600, "2021-05-25"),
                    (6, "payment", 600, "2021-05-25"),
                    (7, "advance", 600, "2021-05-25"),
                ],
                "2021-05-25",
                (Decimal(100), Decimal(0.035), Decimal(0), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 2250.00, "2021-05-22"),
                    (2, "payment", 250.00, "2021-06-03"),
                    (3, "advance", 1200.00, "2021-07-05"),
                    (4, "payment", 4000.00, "2021-07-28"),
                ],
                "2021-07-28",
                (Decimal(0), Decimal(0), Decimal(57.79), Decimal(742.21)),
            ),
        ]
    )
    def test_get_advance_statistics_when_event_are_mixed_and_end_date_equals_to_last_event_date(
        self, events, end_date, expected
    ):
        advance_calculator = AdvanceCalculator()
        response = advance_calculator.get_advance_statistics(
            events=events, end_date=end_date
        )
        self.assertAlmostEqual(response[0], expected[0], places=2)
        self.assertAlmostEqual(response[1], expected[1], places=2)
        self.assertAlmostEqual(response[2], expected[2], places=2)
        self.assertAlmostEqual(response[3], expected[3], places=2)

    @parameterized.expand(
        [
            (
                [
                    (1, "advance", 2250.00, "2021-05-22"),
                    (2, "payment", 250.00, "2021-06-03"),
                    (3, "advance", 1200.00, "2021-07-05"),
                    (4, "payment", 4000.00, "2021-07-28"),
                    (5, "advance", 1500.00, "2021-08-04"),
                ],
                "2021-07-08",
                (Decimal(3209.45), Decimal(27.00), Decimal(9.45), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 2250.00, "2021-05-22"),
                    (2, "payment", 250.00, "2021-06-03"),
                    (3, "advance", 1200.00, "2021-07-05"),
                    (4, "payment", 4000.00, "2021-07-28"),
                    (5, "advance", 1500.00, "2021-08-04"),
                ],
                "2021-10-01",
                (Decimal(757.79), Decimal(15.65), Decimal(57.79), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 100000, "2021-05-22"),
                    (2, "payment", 500, "2021-05-24"),
                    (3, "payment", 500, "2021-05-25"),
                    (4, "advance", 200000, "2021-06-23"),
                    (5, "payment", 300000, "2021-07-19"),
                    (6, "payment", 10000, "2021-07-20"),
                ],
                "2021-06-23",
                (Decimal(299104.85), Decimal(1110.60), Decimal(104.85), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 100000, "2021-05-22"),
                    (2, "payment", 500, "2021-05-24"),
                    (3, "payment", 500, "2021-05-25"),
                    (4, "advance", 200000, "2021-06-23"),
                    (5, "payment", 300000, "2021-07-19"),
                    (6, "payment", 10000, "2021-07-20"),
                ],
                "2021-06-25",
                (Decimal(299104.85), Decimal(1319.97), Decimal(104.85), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 100000, "2021-05-22"),
                    (2, "payment", 500, "2021-05-24"),
                    (3, "payment", 500, "2021-05-25"),
                    (4, "advance", 200000, "2021-06-23"),
                    (5, "payment", 300000, "2021-07-19"),
                    (6, "payment", 10000, "2021-07-20"),
                    (7, "advance", 1000000, "2021-08-10"),
                    (8, "payment", 250, "2021-08-25"),
                    (9, "payment", 250, "2021-08-28"),
                    (10, "payment", 250, "2021-09-20"),
                    (11, "payment", 250, "2021-09-21"),
                    (12, "payment", 250, "2021-09-23"),
                    (13, "payment", 1000000, "2021-08-10"),
                    (14, "payment", 250, "2021-10-25"),
                    (15, "payment", 250, "2021-11-28"),
                    (16, "payment", 250, "2021-12-20"),
                    (17, "payment", 250, "2021-12-21"),
                    (18, "payment", 250, "2021-12-23"),
                ],
                "2021-07-19",
                (Decimal(2832.62), Decimal(0.99), Decimal(3832.62), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 100000, "2021-05-22"),
                    (2, "payment", 500, "2021-05-24"),
                    (3, "payment", 500, "2021-05-25"),
                    (4, "advance", 200000, "2021-06-23"),
                    (5, "payment", 300000, "2021-07-19"),
                    (6, "payment", 10000, "2021-07-20"),
                    (7, "advance", 1000000, "2021-08-10"),
                    (8, "payment", 250, "2021-08-25"),
                    (9, "payment", 250, "2021-08-28"),
                    (10, "payment", 250, "2021-09-20"),
                    (11, "payment", 250, "2021-09-21"),
                    (12, "payment", 250, "2021-09-23"),
                    (13, "payment", 1000000, "2021-08-10"),
                    (14, "payment", 250, "2021-10-25"),
                    (15, "payment", 250, "2021-11-28"),
                    (16, "payment", 250, "2021-12-20"),
                    (17, "payment", 250, "2021-12-21"),
                    (18, "payment", 250, "2021-12-23"),
                ],
                "2021-08-10",
                (Decimal(992833.61), Decimal(347.49), Decimal(3833.61), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 100000, "2021-05-22"),
                    (2, "payment", 500, "2021-05-24"),
                    (3, "payment", 500, "2021-05-25"),
                    (4, "advance", 200000, "2021-06-23"),
                    (5, "payment", 300000, "2021-07-19"),
                    (6, "payment", 10000, "2021-07-20"),
                    (7, "advance", 1000000, "2021-08-10"),
                    (8, "payment", 1000000, "2021-08-10"),
                    (9, "payment", 250, "2021-08-25"),
                    (10, "payment", 250, "2021-08-28"),
                    (11, "payment", 250, "2021-09-20"),
                    (12, "payment", 250, "2021-09-21"),
                    (13, "payment", 250, "2021-09-23"),
                    (14, "payment", 250, "2021-10-25"),
                    (15, "payment", 250, "2021-11-28"),
                    (16, "payment", 250, "2021-12-20"),
                    (17, "payment", 250, "2021-12-21"),
                    (18, "payment", 250, "2021-12-23"),
                ],
                "2022-01-10",
                (Decimal(0), Decimal(0), Decimal(3833.61), Decimal(9666.39)),
            ),
            (
                [
                    (1, "advance", 2250, "2021-05-22"),
                    (2, "advance", 250000, "2021-06-01"),
                    (3, "advance", 250000, "2021-06-01"),
                    (4, "advance", 250000, "2021-06-01"),
                    (5, "advance", 250000, "2021-06-01"),
                    (6, "advance", 250000, "2021-06-01"),
                    (7, "advance", 250000, "2021-06-01"),
                    (8, "advance", 250000, "2021-06-01"),
                    (9, "advance", 250000, "2021-06-01"),
                    (10, "advance", 250000, "2021-06-01"),
                    (11, "advance", 250000, "2021-06-01"),
                    (12, "advance", 250000, "2021-06-01"),
                    (13, "advance", 250000, "2021-06-01"),
                    (14, "advance", 250000, "2021-06-01"),
                    (15, "advance", 250000, "2021-06-01"),
                    (16, "advance", 250000, "2021-06-01"),
                    (17, "advance", 250000, "2021-06-01"),
                    (18, "advance", 250000, "2021-06-01"),
                    (19, "advance", 250000, "2021-06-01"),
                    (20, "advance", 250000, "2021-06-15"),
                    (21, "advance", 250000, "2021-06-15"),
                    (22, "advance", 250000, "2021-06-15"),
                    (23, "advance", 250000, "2021-06-15"),
                    (24, "advance", 250000, "2021-06-15"),
                    (25, "advance", 250000, "2021-06-15"),
                    (26, "advance", 250000, "2021-06-15"),
                    (27, "advance", 250000, "2021-06-15"),
                    (28, "advance", 250000, "2021-06-15"),
                    (29, "advance", 350000, "2021-06-16"),
                    (30, "advance", 350000, "2021-06-16"),
                    (31, "advance", 350000, "2021-06-16"),
                    (32, "advance", 350000, "2021-06-16"),
                    (33, "advance", 350000, "2021-06-16"),
                    (34, "advance", 350000, "2021-06-16"),
                    (35, "advance", 350000, "2021-06-16"),
                    (36, "advance", 350000, "2021-06-16"),
                    (
                        37,
                        "payment",
                        250000,
                        "2021-06-20",
                    ),  # We charge interest normally including today
                    (
                        38,
                        "payment",
                        250000,
                        "2021-06-20",
                    ),  # We detect reptitive payments for the same date
                    (39, "payment", 250000, "2021-06-20"),
                    (40, "payment", 250000, "2021-06-20"),
                    (41, "payment", 250000, "2021-06-20"),
                    (42, "payment", 250000, "2021-06-20"),
                    (43, "payment", 250000, "2021-06-20"),
                    (44, "payment", 250000, "2021-06-20"),
                    (45, "payment", 250000, "2021-06-20"),
                    (46, "payment", 250000, "2021-06-20"),
                    (47, "payment", 250000, "2021-06-20"),
                    (48, "payment", 250000, "2021-06-20"),
                    (49, "payment", 250000, "2021-06-20"),
                    (50, "payment", 250000, "2021-06-20"),
                    (51, "payment", 250000, "2021-06-20"),
                    (52, "payment", 250000, "2021-06-20"),
                    (53, "payment", 250000, "2021-06-20"),
                    (54, "payment", 250000, "2021-06-20"),
                    (55, "payment", 250000, "2021-06-20"),
                    (56, "payment", 250000, "2021-06-20"),
                    (57, "payment", 250000, "2021-06-20"),
                    (58, "payment", 250000, "2021-06-20"),
                    (59, "payment", 250000, "2021-06-20"),
                    (60, "payment", 250000, "2021-06-20"),
                    (61, "payment", 250000, "2021-06-20"),
                    (62, "payment", 250000, "2021-06-20"),
                    (63, "payment", 250000, "2021-06-20"),
                    (64, "payment", 250000, "2021-06-20"),
                    (65, "payment", 250000, "2021-06-20"),
                    (66, "payment", 250000, "2021-06-20"),
                    (67, "payment", 250000, "2021-06-20"),
                    (68, "payment", 250000, "2021-06-20"),  # Accumulate
                    (
                        69,
                        "payment",
                        350000,
                        "2021-06-25",
                    ),  # Pay accumulated payment, get interests
                    (70, "payment", 250000, "2021-07-25"),
                    (71, "advance", 250000, "2021-12-01"),
                    (72, "advance", 250000, "2021-12-01"),
                    (73, "advance", 250000, "2021-12-01"),
                    (74, "advance", 250000, "2021-12-01"),
                    (75, "advance", 250000, "2021-12-01"),
                    (76, "advance", 250000, "2021-12-01"),
                    (77, "advance", 250000, "2021-12-01"),
                    (78, "advance", 250000, "2021-12-01"),
                    (79, "advance", 250000, "2021-12-01"),
                    (80, "advance", 250000, "2021-12-01"),
                    (81, "advance", 250000, "2021-12-01"),
                    (82, "advance", 250000, "2021-12-01"),
                    (83, "payment", 250000, "2021-12-15"),
                    (84, "payment", 250000, "2021-12-15"),
                    (85, "payment", 250000, "2021-12-15"),
                    (86, "payment", 250000, "2021-12-15"),
                    (87, "payment", 250000, "2021-12-15"),
                    (88, "payment", 250000, "2021-12-15"),
                    (89, "payment", 250000, "2021-12-15"),
                    (90, "payment", 250000, "2021-12-15"),
                    (91, "payment", 250000, "2021-12-15"),
                    (92, "payment", 250000, "2021-12-15"),
                    (93, "payment", 250000, "2021-12-15"),
                    (94, "payment", 250000, "2021-12-15"),
                    (95, "payment", 250000, "2021-12-15"),
                    (96, "payment", 250000, "2021-12-15"),
                    (97, "payment", 250000, "2021-12-15"),
                    (98, "payment", 250000, "2021-12-15"),
                    (99, "payment", 250000, "2021-12-15"),
                    (100, "payment", 250000, "2021-12-15"),
                    (101, "payment", 250000, "2021-12-15"),
                    (102, "payment", 250000, "2021-12-15"),
                    (103, "payment", 250000, "2021-12-15"),
                    (104, "payment", 250000, "2021-12-15"),
                    (105, "payment", 250000, "2021-12-15"),
                    (106, "payment", 250000, "2021-12-15"),
                    (107, "payment", 250000, "2021-12-15"),
                    (108, "payment", 250000, "2021-12-15"),
                    (109, "payment", 250000, "2021-12-15"),
                    (110, "payment", 250000, "2021-12-15"),
                ],
                "2021-11-27",
                (Decimal(1005887.73), Decimal(44359.65), Decimal(53637.73), Decimal(0)),
            ),
            (
                [
                    (1, "advance", 2250, "2021-05-22"),
                    (2, "advance", 250000, "2021-06-01"),
                    (3, "advance", 250000, "2021-06-01"),
                    (4, "advance", 250000, "2021-06-01"),
                    (5, "advance", 250000, "2021-06-01"),
                    (6, "advance", 250000, "2021-06-01"),
                    (7, "advance", 250000, "2021-06-01"),
                    (8, "advance", 250000, "2021-06-01"),
                    (9, "advance", 250000, "2021-06-01"),
                    (10, "advance", 250000, "2021-06-01"),
                    (11, "advance", 250000, "2021-06-01"),
                    (12, "advance", 250000, "2021-06-01"),
                    (13, "advance", 250000, "2021-06-01"),
                    (14, "advance", 250000, "2021-06-01"),
                    (15, "advance", 250000, "2021-06-01"),
                    (16, "advance", 250000, "2021-06-01"),
                    (17, "advance", 250000, "2021-06-01"),
                    (18, "advance", 250000, "2021-06-01"),
                    (19, "advance", 250000, "2021-06-01"),
                    (20, "advance", 250000, "2021-06-15"),
                    (21, "advance", 250000, "2021-06-15"),
                    (22, "advance", 250000, "2021-06-15"),
                    (23, "advance", 250000, "2021-06-15"),
                    (24, "advance", 250000, "2021-06-15"),
                    (25, "advance", 250000, "2021-06-15"),
                    (26, "advance", 250000, "2021-06-15"),
                    (27, "advance", 250000, "2021-06-15"),
                    (28, "advance", 250000, "2021-06-15"),
                    (29, "advance", 350000, "2021-06-16"),
                    (30, "advance", 350000, "2021-06-16"),
                    (31, "advance", 350000, "2021-06-16"),
                    (32, "advance", 350000, "2021-06-16"),
                    (33, "advance", 350000, "2021-06-16"),
                    (34, "advance", 350000, "2021-06-16"),
                    (35, "advance", 350000, "2021-06-16"),
                    (36, "advance", 350000, "2021-06-16"),
                    (37, "payment", 250000, "2021-06-20"),
                    (38, "payment", 250000, "2021-06-20"),
                    (39, "payment", 250000, "2021-06-20"),
                    (40, "payment", 250000, "2021-06-20"),
                    (41, "payment", 250000, "2021-06-20"),
                    (42, "payment", 250000, "2021-06-20"),
                    (43, "payment", 250000, "2021-06-20"),
                    (44, "payment", 250000, "2021-06-20"),
                    (45, "payment", 250000, "2021-06-20"),
                    (46, "payment", 250000, "2021-06-20"),
                    (47, "payment", 250000, "2021-06-20"),
                    (48, "payment", 250000, "2021-06-20"),
                    (49, "payment", 250000, "2021-06-20"),
                    (50, "payment", 250000, "2021-06-20"),
                    (51, "payment", 250000, "2021-06-20"),
                    (52, "payment", 250000, "2021-06-20"),
                    (53, "payment", 250000, "2021-06-20"),
                    (54, "payment", 250000, "2021-06-20"),
                    (55, "payment", 250000, "2021-06-20"),
                    (56, "payment", 250000, "2021-06-20"),
                    (57, "payment", 250000, "2021-06-20"),
                    (58, "payment", 250000, "2021-06-20"),
                    (59, "payment", 250000, "2021-06-20"),
                    (60, "payment", 250000, "2021-06-20"),
                    (61, "payment", 250000, "2021-06-20"),
                    (62, "payment", 250000, "2021-06-20"),
                    (63, "payment", 250000, "2021-06-20"),
                    (64, "payment", 250000, "2021-06-20"),
                    (65, "payment", 250000, "2021-06-20"),
                    (66, "payment", 250000, "2021-06-20"),
                    (67, "payment", 250000, "2021-06-20"),
                    (68, "payment", 250000, "2021-06-20"),  # Accumulate
                    (
                        69,
                        "payment",
                        350000,
                        "2021-06-25",
                    ),  # Pay accumulated payment, get interests
                    (70, "payment", 250000, "2021-07-25"),
                    (71, "advance", 250000, "2021-12-01"),
                    (72, "advance", 250000, "2021-12-01"),
                    (73, "advance", 250000, "2021-12-01"),
                    (74, "advance", 250000, "2021-12-01"),
                    (75, "advance", 250000, "2021-12-01"),
                    (76, "advance", 250000, "2021-12-01"),
                    (77, "advance", 250000, "2021-12-01"),
                    (78, "advance", 250000, "2021-12-01"),
                    (79, "advance", 250000, "2021-12-01"),
                    (80, "advance", 250000, "2021-12-01"),
                    (81, "advance", 250000, "2021-12-01"),
                    (82, "advance", 250000, "2021-12-01"),
                    (83, "payment", 250000, "2021-12-15"),
                    (84, "payment", 250000, "2021-12-15"),
                    (85, "payment", 250000, "2021-12-15"),
                    (86, "payment", 250000, "2021-12-15"),
                    (87, "payment", 250000, "2021-12-15"),
                    (88, "payment", 250000, "2021-12-15"),
                    (89, "payment", 250000, "2021-12-15"),
                    (90, "payment", 250000, "2021-12-15"),
                    (91, "payment", 250000, "2021-12-15"),
                    (92, "payment", 250000, "2021-12-15"),
                    (93, "payment", 250000, "2021-12-15"),
                    (94, "payment", 250000, "2021-12-15"),
                    (95, "payment", 250000, "2021-12-15"),
                    (96, "payment", 250000, "2021-12-15"),
                    (97, "payment", 250000, "2021-12-15"),
                    (98, "payment", 250000, "2021-12-15"),
                    (99, "payment", 250000, "2021-12-15"),
                    (100, "payment", 250000, "2021-12-15"),
                    (101, "payment", 250000, "2021-12-15"),
                    (102, "payment", 250000, "2021-12-15"),
                    (103, "payment", 250000, "2021-12-15"),
                    (104, "payment", 250000, "2021-12-15"),
                    (105, "payment", 250000, "2021-12-15"),
                    (106, "payment", 250000, "2021-12-15"),
                    (107, "payment", 250000, "2021-12-15"),
                    (108, "payment", 250000, "2021-12-15"),
                    (109, "payment", 250000, "2021-12-15"),
                    (110, "payment", 250000, "2021-12-15"),
                ],
                "2022-01-10",
                (Decimal(0), Decimal(0), Decimal(118682.41), Decimal(2929067.59)),
            ),
            # (
            #     [
            #         (1, 'payment', 9554.21, '2021-05-24'),
            #         (2, 'payment', 20711.25, '2021-05-25'),
            #         (3, 'advance', 250000.0, '2021-05-26'),
            #         (4, 'payment', 8047.93, '2021-05-26'),
            #         (5, 'payment', 9939.79, '2021-05-27'),
            #         (6, 'payment', 7125.8, '2021-05-28'),
            #         (7, 'payment', 7711.97, '2021-06-01'),
            #         (8, 'payment', 11241.87, '2021-06-07'),
            #         (9, 'payment', 0.19, '2021-06-07'),
            #         (10, 'payment', 0.02, '2021-06-07'),
            #         (11, 'payment', 110000.0, '2021-06-08'),
            #         (12, 'advance', 22877.07, '2021-06-08'),
            #         (12, 'advance', 22877.07, '2021-06-08'),
            #         (13, 'payment', 6459.61, '2021-06-09'),
            #         (14, 'payment', 2628.7, '2021-06-09'),
            #         (15, 'payment', 9894.51, '2021-06-10'),
            #         (16, 'payment', 8111.24, '2021-06-11'),
            #         (17, 'payment', 8309.48, '2021-06-11'),
            #         (18, 'payment', 8260.41, '2021-06-14'),
            #         (19, 'payment', 7166.93, '2021-06-14'),
            #         (20, 'payment', 4858.34, '2021-06-14'),
            #         (21, 'payment', 2303.79, '2021-06-14'),
            #         (22, 'payment', 52490.04, '2021-06-15'),
            #         (23, 'payment', 8233.56, '2021-06-15'),
            #         (24, 'payment', 12279.4, '2021-06-16'),
            #         (25, 'payment', 3323.33, '2021-06-16'),
            #         (26, 'payment', 10924.52, '2021-06-17'),
            #         (27, 'payment', 2643.25, '2021-06-17'),
            #         (28, 'payment', 7086.81, '2021-06-18'),
            #         (29, 'payment', 2544.7, '2021-06-18'),
            #         (30, 'payment', 7180.09, '2021-06-21'),
            #         (31, 'payment', 4212.78, '2021-06-21'),
            #         (32, 'payment', 2974.4, '2021-06-21'),
            #         (33, 'payment', 2530.41, '2021-06-21'),
            #         (34, 'advance', 40000.0, '2021-06-22'),
            #         (35, 'payment', 22436.18, '2021-06-22'),
            #         (36, 'payment', 2597.16, '2021-06-22'),
            #         (37, 'payment', 9246.87, '2021-06-23'),
            #         (38, 'payment', 1228.94, '2021-06-23'),
            #         (39, 'payment', 9031.51, '2021-06-24'),
            #         (40, 'payment', 2049.04, '2021-06-24'),
            #         (41, 'advance', 38000.0, '2021-06-25'),
            #         (42, 'payment', 5091.75, '2021-06-25'),
            #         (43, 'payment', 1434.98, '2021-06-25'),
            #         (44, 'payment', 7978.69, '2021-06-28'),
            #         (45, 'payment', 21503.65, '2021-06-29'),
            #         (46, 'advance', 42000.0, '2021-06-30'),
            #         (47, 'payment', 6929.75, '2021-06-30'),
            #         (48, 'payment', 6961.9, '2021-07-01'),
            #         (49, 'payment', 1814.53, '2021-07-07'),
            #         (50, 'advance', 48000.0, '2021-07-08'),
            #         (51, 'payment', 7689.0, '2021-07-08'),
            #         (52, 'payment', 2531.97, '2021-07-08'),
            #         (53, 'advance', 30000.0, '2021-07-09'),
            #         (54, 'payment', 6326.27, '2021-07-09'),
            #         (55, 'payment', 2302.35, '2021-07-09'),
            #         (56, 'payment', 8469.35, '2021-07-12'),
            #         (57, 'payment', 5048.03, '2021-07-12'),
            #         (58, 'payment', 3179.04, '2021-07-12'),
            #         (59, 'payment', 1575.8, '2021-07-12'),
            #         (60, 'payment', 36626.34, '2021-07-13'),
            #         (61, 'payment', 2521.27, '2021-07-13'),
            #         (62, 'payment', 2697.63, '2021-07-14'),
            #         (63, 'payment', 7868.21, '2021-07-14'),
            #         (64, 'advance', 36000.0, '2021-07-15'),
            #         (65, 'payment', 12169.16, '2021-07-15'),
            #         (66, 'payment', 5128.27, '2021-07-15'),
            #         (67, 'payment', 13462.12, '2021-07-16'),
            #         (68, 'payment', 13206.45, '2021-07-16'),
            #         (69, 'payment', 15131.6, '2021-07-19'),
            #         (70, 'payment', 2957.31, '2021-07-19'),
            #         (71, 'payment', 2187.44, '2021-07-19'),
            #         (72, 'payment', 2107.57, '2021-07-19'),
            #         (73, 'payment', 28927.54, '2021-07-20'),
            #         (74, 'payment', 2155.49, '2021-07-20'),
            #         (75, 'payment', 8012.02, '2021-07-21'),
            #         (76, 'payment', 4879.79, '2021-07-21'),
            #         (77, 'advance', 38000.0, '2021-07-22'),
            #         (78, 'payment', 10567.02, '2021-07-22'),
            #         (79, 'payment', 1865.06, '2021-07-22'),
            #         (80, 'payment', 8032.74, '2021-07-23'),
            #         (81, 'payment', 1106.39, '2021-07-23'),
            #         (82, 'payment', 8944.44, '2021-07-26'),
            #         (83, 'payment', 3440.67, '2021-07-26'),
            #         (84, 'payment', 2413.46, '2021-07-27'),
            #         (85, 'advance', 6000.0, '2021-07-28'),
            #         (86, 'payment', 6107.31, '2021-07-28'),
            #         (87, 'payment', 2381.29, '2021-07-28'),
            #         (88, 'payment', 9348.02, '2021-07-29'),
            #         (89, 'payment', 5628.44, '2021-07-29'),
            #         (90, 'advance', 12000.0, '2021-07-30'),
            #         (91, 'payment', 8407.27, '2021-07-30'),
            #         (92, 'payment', 1207.83, '2021-07-30'),
            #         (93, 'payment', 250.27, '2021-07-30'),
            #         (94, 'advance', 21000.0, '2021-08-02'),
            #         (95, 'payment', 6616.55, '2021-08-02'),
            #         (96, 'payment', 3960.19, '2021-08-02'),
            #         (97, 'payment', 1253.05, '2021-08-02'),
            #         (98, 'payment', 1173.87, '2021-08-02'),
            #         (99, 'payment', 267.36, '2021-08-02'),
            #         (100, 'advance', 15000.0, '2021-08-03'),
            #         (101, 'payment', 20834.3, '2021-08-03'),
            #         (102, 'payment', 2023.47, '2021-08-03'),
            #         (103, 'payment', 198.87, '2021-08-03'),
            #         (104, 'payment', 141.09, '2021-08-03'),
            #         (105, 'advance', 25000.0, '2021-08-04'),
            #         (106, 'payment', 14287.03, '2021-08-04'),
            #         (107, 'payment', 4941.66, '2021-08-04'),
            #         (108, 'payment', 444.05, '2021-08-04'),
            #         (109, 'payment', 13663.32, '2021-08-05'),
            #         (110, 'payment', 4156.88, '2021-08-05'),
            #         (111, 'payment', 270.9, '2021-08-05'),
            #         (112, 'advance', 36000.0, '2021-08-06'),
            #         (113, 'payment', 9163.61, '2021-08-06'),
            #         (114, 'payment', 2227.0, '2021-08-06'),
            #         (115, 'payment', 542.94, '2021-08-06'),
            #         (116, 'advance', 80000.0, '2021-08-09'),
            #         (117, 'payment', 3170.3, '2021-08-09'),
            #         (118, 'payment', 4297.34, '2021-08-09'),
            #         (119, 'payment', 9954.24, '2021-08-09'),
            #         (120, 'payment', 5489.65, '2021-08-09'),
            #         (121, 'payment', 37598.59, '2021-08-10'),
            #         (122, 'payment', 6870.65, '2021-08-10'),
            #         (123, 'payment', 434.71, '2021-08-10'),
            #         (124, 'payment', 1004.2, '2021-08-16'),
            #         (125, 'payment', 20680.79, '2021-08-17'),
            #         (126, 'payment', 840.06, '2021-08-17'),
            #         (127, 'payment', 398.3, '2021-08-17'),
            #         (128, 'payment', 136.39, '2021-08-17'),
            #         (129, 'payment', 8806.53, '2021-08-18'),
            #         (130, 'payment', 3200.76, '2021-08-18'),
            #         (131, 'payment', 339.82, '2021-08-18'),
            #         (132, 'advance', 17000.0, '2021-08-19'),
            #         (133, 'payment', 9106.71, '2021-08-19'),
            #         (134, 'payment', 2224.34, '2021-08-19'),
            #         (135, 'payment', 142.72, '2021-08-19'),
            #         (136, 'payment', 167.48, '2021-08-24'),
            #         (137, 'payment', 82.87, '2021-08-24'),
            #         (138, 'payment', 6053.64, '2021-08-25'),
            #         (139, 'payment', 2704.44, '2021-08-25'),
            #         (140, 'payment', 9070.85, '2021-08-26'),
            #         (141, 'payment', 2869.5, '2021-08-26'),
            #         (142, 'payment', 203.17, '2021-08-26'),
            #         (143, 'advance', 15000.0, '2021-08-27'),
            #         (144, 'payment', 7083.45, '2021-08-27'),
            #         (145, 'payment', 1918.48, '2021-08-27'),
            #         (146, 'payment', 456.19, '2021-08-27'),
            #         (147, 'advance', 18000.0, '2021-08-30'),
            #         (148, 'payment', 8051.77, '2021-08-30'),
            #         (149, 'payment', 6687.86, '2021-08-30'),
            #         (150, 'payment', 5886.9, '2021-08-30'),
            #         (151, 'payment', 2438.72, '2021-08-30'),
            #         (152, 'payment', 57.39, '2021-08-30'),
            #         (153, 'advance', 29000.0, '2021-08-31'),
            #         (154, 'payment', 50347.31, '2021-08-31'),
            #         (155, 'payment', 4863.41, '2021-08-31'),
            #         (156, 'payment', 773.24, '2021-08-31'),
            #         (157, 'payment', 6819.42, '2021-09-01'),
            #         (158, 'payment', 316.95, '2021-09-01'),
            #         (159, 'advance', 11000.0, '2021-09-02'),
            #         (160, 'payment', 13209.83, '2021-09-02'),
            #         (161, 'payment', 2958.97, '2021-09-02'),
            #         (162, 'payment', 453.86, '2021-09-02'),
            #         (163, 'payment', 9618.35, '2021-09-03'),
            #         (164, 'payment', 3538.95, '2021-09-03'),
            #         (165, 'payment', 147.84, '2021-09-03'),
            #         (166, 'advance', 56000.0, '2021-09-07'),
            #         (167, 'payment', 7086.46, '2021-09-07'),
            #         (168, 'payment', 2173.11, '2021-09-07'),
            #         (169, 'payment', 1773.37, '2021-09-07'),
            #         (170, 'payment', 1348.6, '2021-09-07'),
            #         (171, 'payment', 1122.78, '2021-09-07'),
            #         (172, 'payment', 115.16, '2021-09-07'),
            #         (173, 'payment', 24736.23, '2021-09-08'),
            #         (174, 'payment', 2156.0, '2021-09-08'),
            #         (175, 'payment', 232.76, '2021-09-08'),
            #         (176, 'payment', 208.35, '2021-09-08'),
            #         (177, 'payment', 53.28, '2021-09-08'),
            #         (178, 'payment', 50.58, '2021-09-08'),
            #         (179, 'advance', 58000.0, '2021-09-09'),
            #         (180, 'payment', 9614.87, '2021-09-09'),
            #         (181, 'payment', 7614.44, '2021-09-09'),
            #         (182, 'payment', 346.13, '2021-09-09'),
            #         (183, 'advance', 60000.0, '2021-09-10'),
            #         (184, 'payment', 6245.02, '2021-09-10'),
            #         (185, 'payment', 2867.26, '2021-09-10'),
            #         (186, 'payment', 218.19, '2021-09-10'),
            #         (187, 'advance', 5000.0, '2021-09-13'),
            #         (188, 'payment', 8213.2, '2021-09-13'),
            #         (189, 'payment', 3193.31, '2021-09-13'),
            #         (190, 'payment', 1052.57, '2021-09-13'),
            #         (191, 'payment', 957.65, '2021-09-13'),
            #         (192, 'payment', 1441.12, '2021-09-20'),
            #         (193, 'payment', 1005.24, '2021-09-20'),
            #         (194, 'payment', 18320.26, '2021-09-21'),
            #         (195, 'payment', 1367.71, '2021-09-21'),
            #         (196, 'payment', 206.27, '2021-09-21'),
            #         (197, 'payment', 163.61, '2021-09-21'),
            #         (198, 'payment', 5841.97, '2021-09-22'),
            #         (199, 'payment', 1200.52, '2021-09-22'),
            #         (200, 'payment', 201.43, '2021-09-22'),
            #         (201, 'advance', 67000.0, '2021-09-23'),
            #         (202, 'payment', 7154.89, '2021-09-23'),
            #         (203, 'payment', 6757.46, '2021-09-23'),
            #         (204, 'payment', 541.78, '2021-09-23'),
            #         (205, 'payment', 8573.6, '2021-09-24'),
            #         (206, 'payment', 3270.98, '2021-09-24'),
            #         (207, 'payment', 449.92, '2021-09-24'),
            #         (208, 'payment', 8538.5, '2021-09-27'),
            #         (209, 'payment', 3267.77, '2021-09-27'),
            #         (210, 'payment', 2719.03, '2021-09-27'),
            #         (211, 'payment', 1662.26, '2021-09-27'),
            #         (212, 'payment', 85.34, '2021-09-27'),
            #         (213, 'advance', 20000.0, '2021-09-28'),
            #         (214, 'payment', 21650.07, '2021-09-28'),
            #         (215, 'payment', 1133.99, '2021-09-28'),
            #         (216, 'payment', 804.77, '2021-09-28'),
            #         (217, 'payment', 87.76, '2021-09-28'),
            #         (218, 'payment', 6962.06, '2021-09-29'),
            #         (219, 'advance', 23000.0, '2021-10-04'),
            #         (220, 'payment', 5840.8, '2021-10-04'),
            #         (221, 'payment', 140.0, '2021-10-05'),
            #         (222, 'payment', 77.98, '2021-10-05'),
            #         (223, 'payment', 68.39, '2021-10-05'),
            #         (224, 'payment', 7433.18, '2021-10-06'),
            #         (225, 'payment', 2842.71, '2021-10-06'),
            #         (226, 'payment', 114.23, '2021-10-06'),
            #         (227, 'advance', 35000.0, '2021-10-07'),
            #         (228, 'payment', 13714.89, '2021-10-07'),
            #         (229, 'payment', 4233.23, '2021-10-07'),
            #         (230, 'payment', 456.87, '2021-10-07'),
            #         (231, 'payment', 6887.93, '2021-10-08'),
            #         (232, 'payment', 2969.01, '2021-10-08'),
            #         (233, 'payment', 339.89, '2021-10-08'),
            #         (234, 'advance', 12000.0, '2021-10-12'),
            #         (235, 'payment', 7633.78, '2021-10-12'),
            #         (236, 'payment', 7232.6, '2021-10-15'),
            #         (237, 'payment', 982.96, '2021-10-15'),
            #         (238, 'payment', 87.46, '2021-10-15'),
            #         (239, 'advance', 10000.0, '2021-10-18'),
            #         (240, 'payment', 6669.2, '2021-10-18'),
            #         (241, 'payment', 6051.86, '2021-10-18'),
            #         (242, 'payment', 1729.76, '2021-10-18'),
            #         (243, 'payment', 697.41, '2021-10-20'),
            #         (244, 'payment', 8454.92, '2021-10-21'),
            #         (245, 'payment', 2908.4, '2021-10-21'),
            #         (246, 'payment', 338.27, '2021-10-21'),
            #         (247, 'advance', 18000.0, '2021-10-22'),
            #         (248, 'payment', 7293.39, '2021-10-22'),
            #         (249, 'payment', 1730.3, '2021-10-22'),
            #         (250, 'payment', 47.2, '2021-10-22'),
            #         (251, 'advance', 39000.0, '2021-10-25'),
            #         (252, 'payment', 4009.11, '2021-10-25'),
            #         (253, 'payment', 2415.26, '2021-10-25'),
            #         (254, 'payment', 2124.99, '2021-10-25'),
            #         (255, 'payment', 218.12, '2021-11-02'),
            #         (256, 'payment', 6462.61, '2021-11-03'),
            #         (257, 'payment', 1867.51, '2021-11-03'),
            #         (258, 'payment', 183.78, '2021-11-03'),
            #         (259, 'advance', 48000.0, '2021-11-04'),
            #         (260, 'payment', 6736.68, '2021-11-04'),
            #         (261, 'payment', 3192.45, '2021-11-04'),
            #         (262, 'payment', 61.12, '2021-11-04'),
            #         (263, 'payment', 7183.75, '2021-11-05'),
            #         (264, 'payment', 1535.53, '2021-11-05'),
            #         (265, 'payment', 119.28, '2021-11-05'),
            #         (266, 'advance', 15500.0, '2021-11-08'),
            #         (267, 'payment', 7195.84, '2021-11-08'),
            #         (268, 'payment', 3780.91, '2021-11-08'),
            #         (269, 'payment', 2452.69, '2021-11-08'),
            #         (270, 'payment', 1503.15, '2021-11-08'),
            #         (271, 'payment', 480.44, '2021-11-08'),
            #         (272, 'payment', 2587.21, '2021-11-09'),
            #         (273, 'payment', 849.84, '2021-11-09'),
            #         (274, 'payment', 719.58, '2021-11-09'),
            #         (275, 'payment', 97.4, '2021-11-09'),
            #         (276, 'payment', 5712.87, '2021-11-10'),
            #         (277, 'payment', 3482.7, '2021-11-10'),
            #         (278, 'payment', 178.71, '2021-11-10'),
            #         (279, 'advance', 26000.0, '2021-11-12'),
            #         (280, 'payment', 7852.74, '2021-11-12'),
            #         (281, 'payment', 3112.72, '2021-11-12'),
            #         (282, 'payment', 2803.65, '2021-11-12'),
            #         (283, 'payment', 414.09, '2021-11-12'),
            #         (284, 'advance', 5000.0, '2021-11-15'),
            #         (285, 'payment', 14314.12, '2021-11-15'),
            #         (286, 'payment', 2796.71, '2021-11-15'),
            #         (287, 'payment', 2645.33, '2021-11-15'),
            #         (288, 'payment', 1932.63, '2021-11-15'),
            #         (289, 'payment', 56.28, '2021-11-15'),
            #         (290, 'advance', 5000.0, '2021-11-16'),
            #         (291, 'payment', 955.88, '2021-11-16'),
            #         (292, 'payment', 534.45, '2021-11-16'),
            #         (293, 'payment', 463.13, '2021-11-16'),
            #         (294, 'payment', 5978.15, '2021-11-17'),
            #         (295, 'payment', 2801.37, '2021-11-17'),
            #         (296, 'payment', 8810.21, '2021-11-18'),
            #         (297, 'payment', 3227.87, '2021-11-18'),
            #         (298, 'payment', 668.26, '2021-11-18'),
            #         (299, 'advance', 18000.0, '2021-11-19'),
            #         (300, 'advance', 7000.0, '2021-11-19'),
            #         (301, 'payment', 7572.78, '2021-11-19'),
            #         (302, 'payment', 1710.5, '2021-11-19'),
            #         (303, 'payment', 324.75, '2021-11-23'),
            #         (304, 'payment', 58.79, '2021-11-23'),
            #         (305, 'payment', 50.05, '2021-11-23'),
            #         (306, 'advance', 26000.0, '2021-11-24'),
            #         (307, 'payment', 4655.93, '2021-11-24'),
            #         (308, 'payment', 954.88, '2021-11-24'),
            #         (309, 'payment', 189.7, '2021-11-24'),
            #         (310, 'payment', 4970.68, '2021-11-26'),
            #         (311, 'payment', 1788.79, '2021-11-26'),
            #         (312, 'payment', 882.76, '2021-11-26'),
            #         (313, 'payment', 386.74, '2021-11-26'),
            #         (314, 'payment', 8231.84, '2021-12-02'),
            #         (315, 'payment', 428.3, '2021-12-02'),
            #         (316, 'payment', 6485.39, '2021-12-03'),
            #         (317, 'payment', 1648.39, '2021-12-03'),
            #         (318, 'payment', 47.39, '2021-12-03'),
            #         (319, 'payment', 3510.55, '2021-12-06'),
            #         (320, 'payment', 2519.89, '2021-12-06'),
            #         (321, 'payment', 1266.36, '2021-12-06'),
            #         (322, 'payment', 1260.52, '2021-12-06'),
            #         (323, 'payment', 188.05, '2021-12-06'),
            #         (324, 'advance', 42000.0, '2021-12-07'),
            #         (325, 'payment', 15440.67, '2021-12-07'),
            #         (326, 'payment', 1593.24, '2021-12-07'),
            #         (327, 'payment', 269.84, '2021-12-07'),
            #         (328, 'payment', 181.58, '2021-12-07'),
            #         (329, 'payment', 181.02, '2021-12-07'),
            #         (330, 'payment', 5794.72, '2021-12-08'),
            #         (331, 'payment', 2937.46, '2021-12-08'),
            #         (332, 'payment', 277.86, '2021-12-08'),
            #         (333, 'advance', 47000.0, '2021-12-09'),
            #         (334, 'payment', 5927.5, '2021-12-09'),
            #         (335, 'payment', 2675.79, '2021-12-09'),
            #         (336, 'payment', 147.38, '2021-12-09'),
            #         (337, 'advance', 44000.0, '2021-12-10'),
            #         (338, 'payment', 6898.5, '2021-12-10'),
            #         (339, 'payment', 2898.85, '2021-12-10'),
            #         (340, 'payment', 340.0, '2021-12-10'),
            #         (341, 'advance', 17000.0, '2021-12-13'),
            #         (342, 'payment', 9935.85, '2021-12-13')
            #     ],
            #     date(2021,12,5),
            #     (Decimal(43843.93), Decimal(46.04), Decimal(4449.62), Decimal(0)),
            # )
        ]
    )
    def test_get_advance_statistics_when_event_are_mixed_and_end_date_is_not_equals_to_last_event_date(
        self, events, end_date, expected
    ):
        advance_calculator = AdvanceCalculator()
        response = advance_calculator.get_advance_statistics(
            events=events, end_date=end_date
        )
        self.assertAlmostEqual(response[0], expected[0], places=2)
        self.assertAlmostEqual(response[1], expected[1], places=2)
        self.assertAlmostEqual(response[2], expected[2], places=2)
        self.assertAlmostEqual(response[3], expected[3], places=2)
